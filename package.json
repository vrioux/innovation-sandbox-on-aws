{
  "name": "innovation-sandbox-on-aws",
  "version": "1.0.0",
  "description": "Innovation Sandbox on AWS (SO0284)",
  "scripts": {
    "test": "vitest run --coverage",
    "test:update-snapshots": "vitest run -u",
    "e2e": "npm run e2e --workspaces --if-present",
    "e2e:slow": "npm run e2e:slow --workspaces --if-present",
    "build": "npm run build --workspaces --if-present",
    "build:s3": "./deployment/build-s3-dist.sh",
    "build:open-source": "./deployment/build-open-source-dist.sh",
    "clean": "git clean -dfX -e \\!.env -e \\!.vscode \\!.idea",
    "env:init": "cp .env.example .env",
    "set-env": "echo done",
    "bootstrap": "npm run set-env && npm run --workspace @amzn/innovation-sandbox-frontend build && npm run --workspace @amzn/innovation-sandbox-infrastructure cdk bootstrap",
    "docker:build": "npm run set-env && docker build --platform linux/amd64 -t $HUB_ACCOUNT_ID.dkr.ecr.$PRIVATE_ECR_REPO_REGION.amazonaws.com/$PRIVATE_ECR_REPO:latest ./source/infrastructure/lib/components/account-cleaner",
    "docker:login": "npm run set-env && aws ecr get-login-password | docker login --username AWS --password-stdin $HUB_ACCOUNT_ID.dkr.ecr.$PRIVATE_ECR_REPO_REGION.amazonaws.com",
    "docker:push": "npm run set-env && docker push $HUB_ACCOUNT_ID.dkr.ecr.$PRIVATE_ECR_REPO_REGION.amazonaws.com/$PRIVATE_ECR_REPO:latest",
    "docker:build-and-push": "npm run docker:build && npm run docker:login && npm run docker:push",
    "deploy:all": "npm run set-env && npm run deploy:account-pool && npm run deploy:idc && npm run deploy:data && npm run deploy:compute",
    "deploy:account-pool": "npm run set-env && npm run --workspace @amzn/innovation-sandbox-infrastructure cdk synth && npm run --workspace @amzn/innovation-sandbox-infrastructure cdk deploy -- InnovationSandbox-AccountPool --require-approval=never --parameters ParentOuId=$PARENT_OU_ID --parameters HubAccountId=$HUB_ACCOUNT_ID --context deploymentMode=$DEPLOYMENT_MODE  --parameters IsbManagedRegions=$AWS_REGIONS",
    "deploy:idc": "npm run set-env && npm run --workspace @amzn/innovation-sandbox-infrastructure cdk deploy -- InnovationSandbox-IDC --require-approval=never --parameters IdentityStoreId=$IDENTITY_STORE_ID --parameters SsoInstanceArn=$SSO_INSTANCE_ARN --parameters HubAccountId=$HUB_ACCOUNT_ID",
    "deploy:data": "npm run set-env && npm run --workspace @amzn/innovation-sandbox-infrastructure cdk deploy -- InnovationSandbox-Data --require-approval=never --context deploymentMode=$DEPLOYMENT_MODE --context nukeConfigFilePath=$NUKE_CONFIG_FILE_PATH",
    "deploy:compute": "npm run set-env && npm run --workspace @amzn/innovation-sandbox-frontend build && npm run --workspace @amzn/innovation-sandbox-infrastructure cdk deploy -- InnovationSandbox-Compute --require-approval=never --parameters OrgMgtAccountId=$ORG_MGT_ACCOUNT_ID --parameters IdcAccountId=$IDC_ACCOUNT_ID --parameters AcceptSolutionTermsOfUse=$ACCEPT_SOLUTION_TERMS_OF_USE --context deploymentMode=$DEPLOYMENT_MODE --context privateEcrRepo=$PRIVATE_ECR_REPO",
    "destroy:all": "npm run destroy:compute && npm run destroy:data && npm run destroy:idc && npm run destroy:account-pool",
    "destroy:account-pool": "npm run --workspace @amzn/innovation-sandbox-infrastructure cdk destroy -- -f InnovationSandbox-AccountPool",
    "destroy:idc": "npm run --workspace @amzn/innovation-sandbox-infrastructure cdk destroy -- -f InnovationSandbox-IDC",
    "destroy:data": "npm run --workspace @amzn/innovation-sandbox-infrastructure cdk destroy -- -f InnovationSandbox-Data",
    "destroy:compute": "npm run --workspace @amzn/innovation-sandbox-infrastructure cdk destroy -- -f InnovationSandbox-Compute"
  },
  "type": "module",
  "license": "Apache-2.0",
  "workspaces": [
    "source/frontend",
    "source/layers/*",
    "source/lambdas/**",
    "source/infrastructure",
    "source/common",
    "source/e2e"
  ],
  "devDependencies": {
    "@testing-library/jest-dom": "^6.1.5",
    "@testing-library/react": "^14.1.2",
    "@testing-library/user-event": "^14.5.1",
    "@types/testing-library__jest-dom": "^5.14.9",
    "@anatine/zod-mock": "^3.13.4",
    "@aws-sdk/client-accessanalyzer": "^3.687.0",
    "@aws-sdk/client-cloudcontrol": "^3.692.0",
    "@aws-sdk/client-cloudformation": "^3.654.0",
    "@aws-sdk/client-cloudfront": "^3.687.0",
    "@aws-sdk/client-scheduler": "^3.758.0",
    "@aws-sdk/client-sfn": "^3.687.0",
    "@aws-sdk/credential-providers": "^3.693.0",
    "@trivago/prettier-plugin-sort-imports": "^4.3.0",
    "@types/aws-lambda": "^8.10.145",
    "@types/cookie-parser": "^1.4.7",
    "@types/cors": "^2.8.17",
    "@types/fs-extra": "^11.0.4",
    "@types/js-yaml": "^4.0.9",
    "@types/jsonwebtoken": "9.0.7",
    "@types/luxon": "^3.4.2",
    "@types/object-hash": "^3.0.6",
    "@types/supertest": "^6.0.2",
    "@vitest/coverage-v8": "^3.1.1",
    "aws-sdk-client-mock": "^4.0.2",
    "fs-extra": "^11.2.0",
    "js-yaml": "^4.1.0",
    "object-hash": "^3.0.0",
    "prettier": "^3.3.3",
    "prettier-plugin-organize-imports": "^4.1.0",
    "supertest": "^7.0.0",
    "ts-retry": "^5.0.1",
    "tsconfig-paths": "^4.2.0",
    "tsx": "^4.19.4",
    "vitest": "^3.1.1",
    "vitest-mock-extended": "^2.0.2"
  },
  "prettier": {
    "plugins": [
      "@trivago/prettier-plugin-sort-imports",
      "prettier-plugin-organize-imports"
    ],
    "importOrder": [
      "^@amzn/(.*)$",
      "^[./]"
    ],
    "importOrderSeparation": true,
    "importOrderSortSpecifiers": true,
    "importOrderParserPlugins": [
      "typescript",
      "classProperties",
      "[\"decorators\", { \"decoratorsBeforeExport\": true }]"
    ]
  }
}
